{
	title: 'App',
	$doc_markdown: true,
	$doc_type: 'textarea',
	doc: 'One of the biggest strengths of enduro.js is the ability to pre-generate static html files and then serve them blazingly fast. However, this does not mean everything has to be static. After you create your enduro project by running `enduro create myapp`, look into `@@app/app.js` file. This file provides you with raw express\' `app` object.\n\nIn simple terms, the `app.js` file gives you access to raw express to do whatever you want.\n\n## Create custom api call\n\nYour website might want to have some dynamic server functionality. To create a custom api endpoint, just put this code into the `@@app/app.js` file:\n```\napp.get(\'/get_random_number\', function (req, res) {\n	res.send(Math.random())\n})\n```\n\n## Override static enduro file\nEven if you have a page that is pre-generated by enduro.js, you can override this path like this:\n```\napp.get(\'/do_not_show_this_page\', function (req, res) {\n	res.redirect(\'/\')\n})\n```\n\n## Rendering enduro.js template\nEnduro.js provides a way to dynamically render template defined in `@@/pages` folder. Just use `temper.render` function.\n\n```\nvar local_app = function () {}\n\nvar temper = require(ENDURO_FOLDER + \'/libs/temper/temper\')\n\nlocal_app.prototype.init = function (app) {\n\n	app.get(\'/invitation/:name\', function (req, res) {\n		temper.render(\'invitation\', {name: req.params.name})\n			.then((rendered_temp) => {\n				res.send(rendered_temp)\n			})\n	})\n}\n\nmodule.exports = new local_app()\n\n```',
	$marked_doc_hidden: true,
	marked_doc: '',
	contents: [],
	$contents_hidden: true,
	$abstracted_content_hidden: true,
	abstracted_content: {
		marked_doc: '<p>One of the biggest strengths of enduro.js is the ability to pre-generate static html files and then serve them blazingly fast. However, this does not mean everything has to be static. After you create your enduro project by running <code>enduro create myapp</code>, look into <code>@@app/app.js</code> file. This file provides you with raw express&#39; <code>app</code> object.</p>\n<p>In simple terms, the <code>app.js</code> file gives you access to raw express to do whatever you want.</p>\n<h2 id="create-custom-api-call">Create custom api call</h2>\n<p>Your website might want to have some dynamic server functionality. To create a custom api endpoint, just put this code into the <code>@@app/app.js</code> file:</p>\n<pre><code>app.get(&#39;/get_random_number&#39;, function (req, res) {\n    res.send(Math.random())\n})\n</code></pre><h2 id="override-static-enduro-file">Override static enduro file</h2>\n<p>Even if you have a page that is pre-generated by enduro.js, you can override this path like this:</p>\n<pre><code>app.get(&#39;/do_not_show_this_page&#39;, function (req, res) {\n    res.redirect(&#39;/&#39;)\n})\n</code></pre><h2 id="rendering-enduro-js-template">Rendering enduro.js template</h2>\n<p>Enduro.js provides a way to dynamically render template defined in <code>@@/pages</code> folder. Just use <code>temper.render</code> function.</p>\n<pre><code>var local_app = function () {}\n\nvar temper = require(ENDURO_FOLDER + &#39;/libs/temper/temper&#39;)\n\nlocal_app.prototype.init = function (app) {\n\n    app.get(&#39;/invitation/:name&#39;, function (req, res) {\n        temper.render(&#39;invitation&#39;, {name: req.params.name})\n            .then((rendered_temp) =&gt; {\n                res.send(rendered_temp)\n            })\n    })\n}\n\nmodule.exports = new local_app()\n</code></pre>',
		contents: [
			{
				heading: 'Create custom api call',
				level: '2',
				link: 'create-custom-api-call'
			},
			{
				heading: 'Override static enduro file',
				level: '2',
				link: 'override-static-enduro-file'
			},
			{
				heading: 'Rendering enduro.js template',
				level: '2',
				link: 'rendering-enduro-js-template'
			}
		]
	}
}